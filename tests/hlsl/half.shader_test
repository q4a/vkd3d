[pixel shader fail(sm<6) todo]
uniform half h;

float4 main() : sv_target
{
    return 0;
}

[pixel shader]
float4 var;

float4 main() : sv_target
{
    half4 ret = var + 0.5;
    return ret;
}

[test]
uniform 0 float4 1.0 2.0 3.0 4.0
draw quad
probe (0, 0) f32(1.5, 2.5, 3.5, 4.5)

[require]
shader model >= 2.0
shader model < 3.0

[pixel shader d3dbc-hex]
% The same as above, but in bytecode format so we test the partial precision
% destination modifier.
0002ffff                                                % ps_2_0
51000005 01000fa0 0000003f 00000000 00000000 00000000   % def c1, 0.5, 0, 0, 0
01000002 00000f80 0000e4a0                              % mov r0, c0
02000003 00002f80 0000e480 010000a0                     % add_pp r0, r0, c1.x
01000002 00082f80 0000e480                              % mov_pp oC0, r0
ffff0000                                                % end

[test]
uniform 0 float4 1.0 2.0 3.0 4.0
draw quad
probe (0, 0) f32(1.5, 2.5, 3.5, 4.5)

[require]
options: backcompat

[pixel shader]
uniform half h;

float4 main() : sv_target
{
    return h;
}

[test]
uniform 0 float 10.0
draw quad
probe (0, 0) rgba (10.0, 10.0, 10.0, 10.0)

[require]
shader model >= 4.0

[pixel shader]
uniform float4 f;

float4 main() : sv_target
{
    min16float4 h = f;
    return h * min16float4(h[1], 2.0, 0.5, -0.5);
}

[test]
uniform 0 float4 0.0 0.0 0.0 0.0
draw quad
probe (0, 0) rgba(0.0, 0.0, 0.0, 0.0)
uniform 0 float4 3.0 5.0 -0.2 -10.0
draw quad
probe (0, 0) rgba(15.0, 10.0, -0.1, 5.0) 4096

[require]
shader model >= 6.2
native-16-bit

[pixel shader]
uniform float4 f;

float4 main() : sv_target
{
    half4 h = f;
    return h * half4(h[1], 2.0, 0.5, -0.5);
}

[test]
uniform 0 float4 0.0 0.0 0.0 0.0
draw quad
probe (0, 0) rgba(0.0, 0.0, 0.0, 0.0)
uniform 0 float4 3.0 5.0 -0.2 -10.0
draw quad
probe (0, 0) rgba(15.0, 10.0, -9.99755859e-002, 5.0)
uniform 0 float4 32768.0 32768.0 -32768.0 -32768.0
draw quad
probe (0, 0) rgba(1e100, 1e100, -16384.0, 16384.0)
uniform 0 float4 0.000062 0.000062 5.97e-8 5.97e-8
draw quad
probe (0, 0) rgba(0.0, 1.23977661e-004, 0.0, 0.0)
